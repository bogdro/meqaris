	Meqaris (Meeting Equipment and Room Invitation System)

			Installation instructions
-----------------------------------------------------------------------

-----------------
Project home page
-----------------

https://meqaris.sourceforge.io/

---------------------------------
Initial steps - most are one-time
---------------------------------

- The Perl language interpreter and all the Perl modules required by Meqaris
  must be installed.

- The PostgreSQL database server must be installed, including the btree_gist
  extension binary file (you may need to install the 'contrib' package, or
  similar).

- The PostgreSQL database server must be running.
  On a Linux system, you would do one of:

  * login to the system as the database user 'postgres' (you usually do
    'su - postgres' as 'root' to log in to that account) and run:

	pg_ctl start

  * login as 'root' and run:

	systemctl start postgresqlXX (XX being the version)

  * login as 'root' and run:

	service postgresql start

- Create the database user to host the application's database,
  e.g. run as 'postgres':

	createuser -P meqaris

- Create the application's database, e.g. run as 'postgres':

	createdb -O meqaris meqaris

- NOTE for older database versions:
  On PostgreSQL versions older than 13.0, you may need to perform one
  additional step before running Meqaris - install the "btree_gist" extension
  manually in the Meqaris database you've just created. Meqaris cannot do this,
  because only the database superuser (usually 'postgres') is allowed to do it.
  Substitute the hostname and port number where necessary and run this command
  to install the extension:

	psql -U postgres -h hostname -p port_number -d meqaris \
		-c 'create extension if not exists btree_gist;'

- Database access rules must be created within the database server, unless you
  wish to leave the default rules.
  Login to the system as the database user 'postgres' or 'root' and run:

	cp /var/lib/pgsql/data/pg_hba.conf /var/lib/pgsql/data/pg_hba.conf-backup
	echo local meqaris meqaris scram-sha-256 >> /var/lib/pgsql/data/pg_hba.conf
	echo host all all 127.0.0.1/32 scram-sha-256 >> /var/lib/pgsql/data/pg_hba.conf

  (Note the double ">>" - it's CRUCIAL to use double ">>", a single ">" would
  OVERWRITE the target file).

	On older PostgreSQL versions replace 'scram-sha-256' with 'md5'.

  If you'll need to access the database from another computer:

  * a line similar to the 'host all all 127.0.0.1/32 scram-sha-256' should
    be added to pg_hba.conf, containing the correct IP address,
  * firewall rules may need to be adjusted
  * the '/etc/hosts.allow' file (tcpwrappers) may need to be adjusted

- After changing the access rules for the database server, restart it.
  On Linux, you would do one of:

  * login to the system as the database user 'postgres' and run:

	pg_ctl reload

  * login as 'root' and run:

	systemctl restart postgresqlXX (XX being the version)

  * login as 'root' and run:

	service postgresql restart

------------------------
Application installation
------------------------

- Copy bin/meqaris to a directory expected to contain binaries, like /usr/bin,

- Edit config/meqaris.ini to match your directories and database settings
  (see below),

- Edit config/meqaris-log4perl.cfg and choose your log file's location,

- Copy the the whole 'sql' directory and the config/meqaris-log4perl.cfg file
  to a directory expected to contain application data files, like
  /var/lib/meqaris/. The directory must be writable for your mail server,

- Copy config/meqaris.ini to a directory expected to contain configuration
  files, like /etc,

- Copy config/meqaris.logrotate to a directory expected to contain logrotate
  configuration files, like /etc/logrotate.d,

- Copy the manual to a place suitable for documentation, like /usr/share/doc.

Alternatively, if you have the 'make' program and some common Linux
 utilities, you can run 'make install', passing the the target directories.
 Examples:

	make install BINDIR=/usr/bin CONFDIR=/etc DATADIR=/var/lib \
		DOCDIR=/usr/share/doc MANDIR=/usr/share/man
	make install BINDIR=$HOME/tools/meqaris/bin \
		CONFDIR=$HOME/tools/meqaris/etc \
		DATADIR=$HOME/tools/meqaris/data \
		DOCDIR=$HOME/tools/meqaris/doc \
		MANDIR=$HOME/tools/meqaris/man

All the above directories and their parent directories must be reachable by
 your mail server.

The log file (/var/log/meqaris.log by default) must be created writable for
 your mail server. Alternatively, the directory which would contain it must be
 writable by your mail server.

The necessary database structures will be created by the application itself
 while operating. You can also choose to run the database installation/upgrade
 scripts yourself by running

	meqaris --upgrade-db

-------------------------
Meqaris configuration
-------------------------

You need to edit the meqaris.ini file to set the proper values for database
 access in the [postgresql] section and your chosen application data files'
 directory in the [meqaris] section under:

[meqaris]
dbtype=postgresql
datadir=/path/to/meqaris/data
log4perl_config_location=/path/to/meqaris/data/meqaris-log4perl.cfg
lock_dir=/var/lock

[postgresql]
username=meqaris
password=meqaris-pass
dbname=meqaris
host=127.0.0.1
port=5432
connect_timeout=30

Make sure that the "datadir" directory, the "log4perl_config_location" file
 and the actual log file have the right permissions so that Meqaris, which
 will run under the mail server's privileges, has the right access to all of
 those locations.

-------------------------
Mail server configuration
-------------------------

Consult your mail server manual about how to make it send e-mails addressed
 to your resources (rooms, etc.) to the Meqaris script and how to accept the
 replies.

For Postfix, you can edit the /etc/postfix/aliases file and add the right
 command there. It must begin with the "pipe" symbol - "|" - so that the
 Meqaris script receives the mail on the so-called "standard input".

Assuming you want a "room 1" alias and everything is installed in the default
 paths, the simplest entry in the 'aliases' file could be:

	room1: |"meqaris"

Assuming you want a "room 1" alias and everything is installed NOT in the
 default paths, the most complicated entry in the 'aliases' file could be:

	room1: |"SMTPHOSTS=smtp-host-name /path/to/perl -I /path/to/perl/modules /path/to/meqaris --conf /path/to/meqaris.ini"

By using just the `cat` command as the output instead of sending e-mails
 (see the Manual for administrators), you can pipe the reply from Meqaris
 to other commands, including the mail server's own commands and since you
 know e.g. the alias which is being processed, you can add it to the other
 command's options, like so:

	room1: |"meqaris"| some-other-command "room1"

Meqaris will substitute the following strings in the command you set in the
 'mail_command' parameter:

- %from% gets substituted by the value of the "From" header in the response
  (which is the resource's name and e-mail address),
- %to% gets substituted by the value of the "To" header in the response
  (which usually is the meeting Organizer),
- %cc% gets substituted by the value of the "Cc" header in the response
  (which usually is the address of the sender of the invitation, which can
  be different than the Organizer),
- %subject% gets substituted by the subject of the response e-mail,
- %action% gets substituted by the action Meqaris took - 'Accepted'
  or 'Declined'.

This way, you can pipe your responses to another mailing mechanism, e.g.:

	meqaris --set mail_command --value 'some_mail_program --from "%from%" --to "%to%"'
	meqaris --set mail_sending_method --value mail_command

For a passwordless, local-only mail submission, add this to your
 /etc/postfix/main.cf file:

inet_interfaces = localhost
inet_protocols = all
mynetworks_style = host
smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated reject_unauth_destination
smtp_sasl_auth_enable = no
smtp_tls_security_level =
smtpd_sasl_auth_enable = no
smtpd_tls_security_level =

Restart the Postfix server (or reload its configuration) afterwards.

-----------------------------------------------------------------

Uninstallation
--------------

To uninstall, if needed:

- remove the 'meqaris' script from the directory you installed it to

- remove the meqaris.ini file from the directory you installed it to

- remove the meqaris logrotate configuration file from the directory you
  installed it to

- remove the meqaris-log4perl.cfg file from the directory you installed it to

- remove the application SQL file(s) from the directory you installed them to

- remove the documentation file(s) from the directories you installed them to

- delete the application's database - run as 'postgres':

	dropdb meqaris

- delete the application's database user - run as 'postgres':

	dropuser meqaris

Alternatively, if you have the 'make' program and some common Linux
 utilities, you can run 'make uninstall', passing the same directories
 that were used during installation.
 Examples:

	make uninstall BINDIR=/usr/bin CONFDIR=/etc DATADIR=/var/lib \
		DOCDIR=/usr/share/doc MANDIR=/usr/share/man
	make uninstall BINDIR=$HOME/tools/meqaris/bin \
		CONFDIR=$HOME/tools/meqaris/etc \
		DATADIR=$HOME/tools/meqaris/data \
		DOCDIR=$HOME/tools/meqaris/doc \
		MANDIR=$HOME/tools/meqaris/man
